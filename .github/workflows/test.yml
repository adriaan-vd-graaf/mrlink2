name: Test
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Step to set up R
      - name: Install R
        uses: r-lib/actions/setup-r@v2
        id: setup-r
        with:
           r-version: '4.5.0' # Explicitly set R version

      - name: Print R_HOME after setup # <-- DEBUG STEP 1
        run: | # Use multi-line indicator
          echo "R_HOME is: $R_HOME"

      # Install system dependencies for R packages (BEFORE installing R packages)
      - name: Install R System Dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages: |
            any::data.table
            any::coloc

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: | # Use multi-line indicator
          python -m pip install --upgrade pip
          pip install numpy scipy pandas pytest bitarray duckdb pyarrow rpy2

      # Step to install R packages (after system dependencies)
      - name: Install R dependencies
        run: | # Use multi-line indicator
          Rscript -e 'install.packages(c("data.table", "coloc"), repos = "https://cloud.r-project.org/")'

      - name: Download and install plink
        run: | # Use multi-line indicator
          PLINK_URL="https://s3.amazonaws.com/plink1-assets/plink_linux_x86_64_20231211.zip"
          wget -q $PLINK_URL -O plink_linux_x86_64.zip
          unzip plink_linux_x86_64.zip -d plink
          sudo mv plink/plink /usr/local/bin/
          rm -rf plink_linux_x86_64.zip plink

      - name: Run unit tests
        run: pytest tests/unit_tests_mr_link_2.py # Single line is okay, but | is safer

      - name: Run integration tests
        run: pytest tests/integration_tests_mr_link_2.py # Single line is okay, but | is safer

      - name: Run comparison_tests_with_r_imlementation
        env:
          # Explicitly get R_HOME from the setup-r step's output
          R_HOME_FROM_OUTPUT: ${{ steps.setup-r.outputs.r-home }}
          # Construct the library path - assuming standard $R_HOME/lib structure first
          R_LIB_DIR: ${{ steps.setup-r.outputs.r-home }}/lib
          LD_LIBRARY_PATH: ${{ steps.setup-r.outputs.r-home }}/lib:${{ env.LD_LIBRARY_PATH }}
          # Also explicitly set R_HOME env var for this step
          R_HOME: ${{ steps.setup-r.outputs.r-home }}
        run: |
          echo "--- Debug Info ---"
          echo "Running test: test_for_r_and_python_concordance.py"
          echo "Value from steps.setup-r.outputs.r-home: ${{ steps.setup-r.outputs.r-home }}" # Verify output is read
          echo "R_LIB_DIR calculated: $R_LIB_DIR" # Check constructed lib dir
          echo "R_HOME in this step's env: $R_HOME" # Check R_HOME env var is now set
          echo "LD_LIBRARY_PATH in test step: $LD_LIBRARY_PATH" # Check the full LD_LIBRARY_PATH
          echo "Listing contents of R_LIB_DIR ($R_LIB_DIR):"
          ls -l "$R_LIB_DIR" || echo "Failed to list $R_LIB_DIR" # See if libR.so is here
          echo "--- End Debug Info ---"
          pytest tests/test_for_r_and_python_concordance.py
