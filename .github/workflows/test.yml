name: Test
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Step to set up R
      - name: Install R
        uses: r-lib/actions/setup-r@v2
        id: setup-r # Added id just in case, R_HOME env var is usually set directly

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Ensure rpy2 is installed *after* R is set up
          pip install numpy scipy pandas pytest bitarray duckdb pyarrow rpy2

      # Step to install R packages
      - name: Install R dependencies
        run: |
          Rscript -e 'install.packages(c("data.table", "coloc"), repos = "https://cloud.r-project.org/")'

      - name: Download and install plink
        run: |
          PLINK_URL="https://s3.amazonaws.com/plink1-assets/plink_linux_x86_64_20231211.zip"
          wget -q $PLINK_URL -O plink_linux_x86_64.zip
          unzip plink_linux_x86_64.zip -d plink
          sudo mv plink/plink /usr/local/bin/
          rm -rf plink_linux_x86_64.zip plink

      - name: Run unit tests
        run: pytest tests/unit_tests_mr_link_2.py

      - name: Run integration tests
        run: pytest tests/integration_tests_mr_link_2.py

      - name: Run comparison_tests_with_r_imlementation
        # Add environment variable for the R shared library
        env:
          # R_HOME should be automatically available from the setup-r step
          # Prepend the R library path to LD_LIBRARY_PATH
          LD_LIBRARY_PATH: ${{ env.R_HOME }}/lib:${{ env.LD_LIBRARY_PATH }}
        run: pytest tests/test_for_r_and_python_concordance.py
